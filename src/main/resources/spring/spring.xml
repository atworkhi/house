<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<mvc:annotation-driven/>
	
	
	
	<mvc:default-servlet-handler />
	
	<context:component-scan base-package="com.house.controller"/>
	
	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/back/**"/>
            <bean class="com.house.interceptor.LoginInteceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
    
	<context:component-scan base-package="com.house.service" />
	
	<context:property-placeholder location="classpath:properties/jdbc.properties" />
	
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${driverClass}"/>
		<property name="url" value="${jdbcUrl}"/>
		<property name="username" value="${user}"/>
		<property name="password" value="${password}"/>
 		<property name="maxActive" value="${maxPoolSize}"/>
		<property name="minIdle" value="${minPoolSize}"/>
		<!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}" /> 
         <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}" />
        <property name="poolPreparedStatements" value="${poolPreparedStatements}" />
        <property   
          name="maxPoolPreparedStatementPerConnectionSize" 
          value="${maxPoolPreparedStatementPerConnectionSize}" />
	</bean>
	
	<!-- 配置sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis全局文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis.xml"/>
		<!-- 扫描entity包，使用别名 -->
		<property name="typeAliasesPackage" value="com.house.entity"/>
		<!-- 加载mapper配置文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 文件上传媒体解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设置文件上传大小  字节-->
		<property name="maxUploadSize" value="10485760"></property>	
	</bean>
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean> 
	
	<!-- 配置扫描Dao接口，动态实现dao接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.house.dao"/>
	</bean>

	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 注解管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean class="com.house.excepion.ExceptionHandler"/>  
</beans>
